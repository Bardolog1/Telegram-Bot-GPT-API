name: Deploy to Fly.io

on:
  push:
    branches:
      - main  
  workflow_dispatch:
   
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package  


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        run: |
          docker build . -t pee-java-app:1.0.0
          docker tag pee-java-app:1.0.0 bardolog1/pee-java-app:1.0.0  
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push bardolog1/pee-java-app:1.0.0

      - name: Install flyctl
        run: |
          curl -L https://fly.io/install.sh | sh
          export FLYCTL_INSTALL="/home/runner/.fly" # Reemplaza con tu directorio de instalaciÃ³n de flyctl
          export PATH="/home/runner/.fly/bin/flyctl" 
  

      - name: Check flyctl version
        run: /home/runner/.fly/bin/flyctl version

      - name: Save env variables to file
        run: |
          echo "TELEGRAM_BOT_NAME=${{ secrets.TELEGRAM_BOT_NAME }}" >> .env
          echo "TELEGRAM_BOT_API_KEY=${{ secrets.TELEGRAM_BOT_API_KEY }}" >> .env
          echo "CHAT_GPT_API_KEY=${{ secrets.CHAT_GPT_API_KEY }}" >> .env
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to Fly.io
        run: |
          docker-compose --env-file=.env up -d
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

     
          
